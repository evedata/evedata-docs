name: CICD
on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main
      - production

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  UV_CACHE_DIR: .uv_cache
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install
      - uses: astral-sh/setup-uv@v6
        with:
          version-file: "pyproject.toml"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
      - run: uv python install 3.13
      - run: |
          uv sync --frozen --all-extras
          uv pip list
      - run: make lint

  deploy-development:
    environment: development
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'pull_request'
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout: |
            docs
            includes
      - run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev pngquant
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install
      - uses: astral-sh/setup-uv@v6
        with:
          version-file: "pyproject.toml"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
      - uses: astral-sh/setup-uv@v6
        with:
          version-file: "pyproject.toml"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
      - run: uv python install 3.13
      - run: |
          uv sync --frozen --all-extras
          uv pip list
      - run: make build
      - uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: versions upload --env development --preview-alias pr-${{ github.event.pull_request.number }}

  deploy-staging:
    environment: staging
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'push' && github.ref_name == 'main'
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout: |
            docs
            includes
      - run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev pngquant
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install
      - uses: astral-sh/setup-uv@v6
        with:
          version-file: "pyproject.toml"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
      - uses: astral-sh/setup-uv@v6
        with:
          version-file: "pyproject.toml"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
      - run: uv python install 3.13
      - run: |
          uv sync --frozen --all-extras
          uv pip list
      - run: make build
      - uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env staging

  deploy-production:
    environment: production
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'push' && github.ref_name == 'production'
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout: |
            docs
            includes
      - run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev pngquant
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install
      - uses: astral-sh/setup-uv@v6
        with:
          version-file: "pyproject.toml"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
      - uses: astral-sh/setup-uv@v6
        with:
          version-file: "pyproject.toml"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
      - run: uv python install 3.13
      - run: |
          uv sync --frozen --all-extras
          uv pip list
      - run: make build
      - uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env production
